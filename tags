!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
==	lib/chess.rb	/^  def ==(other)$/;"	f	class:Position
AmbiguousMove	lib/chess.rb	/^class AmbiguousMove < Exception$/;"	c
ChessHelper	lib/chess.rb	/^module ChessHelper$/;"	m
Fixnum	lib/chess.rb	/^class Fixnum$/;"	c
IllegalMove	lib/chess.rb	/^class IllegalMove < Exception$/;"	c
Position	lib/chess.rb	/^class Position$/;"	c
String	lib/chess.rb	/^class String$/;"	c
Symbol	lib/chess.rb	/^class Symbol$/;"	c
[]	lib/chess.rb	/^  def [](idx)$/;"	f	class:Position
[]	lib/chess.rb	/^  def self.[](opts)$/;"	F	class:Position
[]=	lib/chess.rb	/^  def []=(idx,p)$/;"	f	class:Position
_board	lib/chess.rb	/^  def _board; @board; end$/;"	f	class:Position
_pieces	lib/chess.rb	/^  def _pieces; @pieces; end$/;"	f	class:Position
color	lib/chess.rb	/^  def color$/;"	f	class:Symbol
in_check?	lib/chess.rb	/^  def in_check?$/;"	f	class:Position
initialize	lib/chess.rb	/^  def initialize(opts={})$/;"	f	class:Position
initialize	lib/chess.rb	/^  def initialize(str,position)$/;"	f	class:IllegalMove
initialize	lib/chess.rb	/^  def initialize(str,position,list)$/;"	f	class:AmbiguousMove
initialize_copy	lib/chess.rb	/^  def initialize_copy(other)$/;"	f	class:Position
inspect	lib/chess.rb	/^  def inspect$/;"	f	class:Position
king?	lib/chess.rb	/^  def king?$/;"	f
move	lib/chess.rb	/^  def move(str)$/;"	f	class:Position
move_piece	lib/chess.rb	/^  def move_piece(from, to, act=true)$/;"	f	class:Position
path_clear	lib/chess.rb	/^  def path_clear(from, to)$/;"	f	class:Position
pawn?	lib/chess.rb	/^  def pawn?$/;"	f
to_idx	lib/chess.rb	/^  def to_idx$/;"	f	class:String
to_s	lib/chess.rb	/^  def to_s$/;"	f	class:Position
to_sq	lib/chess.rb	/^  def to_sq$/;"	f	class:Fixnum
valid_capture	lib/chess.rb	/^  def valid_capture(from, to)$/;"	f	class:Symbol
valid_move	lib/chess.rb	/^  def valid_move(from, to)$/;"	f	class:Symbol
white	lib/chess.rb	/^  def white(p,w,b)$/;"	f	class:ChessHelper
xydiff	lib/chess.rb	/^  def xydiff(from, to)$/;"	f	class:ChessHelper
